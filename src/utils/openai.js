const OpenAI = require('openai');
const { errorLogger } = require('./logErrors');

const openai = new OpenAI({
	apiKey: process.env.OPENAI_API_KEY,
});

const generateAIResponse = async (chatMessages) => {
	try {
		const completion = await openai.chat.completions.create({
			model: 'gpt-3.5-turbo-16k',
			messages: [
				{
					role: 'system',
					content:
						'Act like a recruiter who is hiring for the role of software developer at a company named HeroHire.',
				},
				...chatMessages,
			],
			temperature: 0.7,
			max_tokens: 100,
			top_p: 0.6,
			frequency_penalty: 0,
			presence_penalty: 0.3,
			n: 1,
		});

		if (
			completion &&
			completion.choices[0] &&
			completion.choices[0].message &&
			completion.choices[0].message.content &&
			completion.choices[0].message.content.trim()
		)
			return completion.choices[0].message.content.trim();

		throw new Error('No message generated by openAI');
	} catch (err) {
		errorLogger(err);

		return null;
	}
};

async function convertTextToAudioV2(sentenceToSpeak) {
	const openai = new OpenAI({
		apiKey: process.env.OPENAI_API_KEY,
	});

	const speech = await openai.audio.speech.create({
		model: 'tts-1',
		voice: 'alloy',
		input: sentenceToSpeak,
	});

	const buffer = Buffer.from(await speech.arrayBuffer());

	const base64Data = buffer.toString('base64');

	return base64Data;
}

module.exports = {
	generateAIResponse,
	convertTextToAudioV2,
};
